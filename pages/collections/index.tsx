import Head from "next/head";
import Link from "next/link";
import Image from "next/image";

import { shopifyGraphqlRequestClient } from "src/lib/clients/graphqlRequestClient";

import { dehydrate, QueryClient } from "@tanstack/react-query";

import { getLayout } from "components/Layout/Layout";

import {
  useGetAllProductsQuery,
  useInfiniteGetAllProductsQuery,
  useGetShopInfoQuery,
  useGetAllCollectionsQuery,
  GetAllCollectionsQuery,
} from "src/generated/graphql";

export default function CollectionsPage() {
  const { isLoading, error, data } = useGetAllCollectionsQuery<
    GetAllCollectionsQuery,
    Error
  >(shopifyGraphqlRequestClient);

  if (isLoading) return <h1>loading...</h1>;

  if (error) return <h1>{JSON.stringify(error)}</h1>;

  if (!data) return null;

  const collectionData = data?.collections?.edges;

  return (
    <>
      <Head>
        <title>Create Next Shop</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="grid-container grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 2xl:grid-cols-4 gap-4 mx-auto px-2 lg:px-6 max-w-8xl">
        {collectionData &&
          collectionData.map((collection, idx) => {
            return (
              <div
                key={collection.node.id}
                className="relative hover:text-white"
              >
                <Link
                  as={`/collections/${collection.node.handle}`}
                  href="/collections/[id]"
                >
                  <a>
                    <Image
                      src={collection.node?.image?.url}
                      alt={collection.node?.image?.altText}
                      width={collection.node?.image?.width}
                      height={collection.node?.image?.height}
                      blurDataURL={collection.node?.image?.url} //automatically provided
                      placeholder="blur" // Optional blur-up while loading
                    />
                    <h2 className="uppercase whitespace-nowrap text-2xl font-bold absolute top-1/2 left-1/2 translate-x-[-50%] translate-y-[-50%]">
                      {collection.node.title}
                    </h2>
                  </a>
                </Link>
              </div>
            );
          })}
      </div>
    </>
  );
}

CollectionsPage.getLayout = getLayout;

export const getStaticProps = async () => {
  const queryClient = new QueryClient();

  await queryClient.prefetchInfiniteQuery(
    useInfiniteGetAllProductsQuery.getKey({ after: null }),
    useGetAllProductsQuery.fetcher(shopifyGraphqlRequestClient, { after: null })
  );

  await queryClient.prefetchQuery(
    useGetShopInfoQuery.getKey(),
    useGetShopInfoQuery.fetcher(shopifyGraphqlRequestClient)
  );

  await queryClient.prefetchQuery(
    useGetAllCollectionsQuery.getKey(),
    useGetAllCollectionsQuery.fetcher(shopifyGraphqlRequestClient)
  );

  return {
    props: {
      dehydratedState: JSON.parse(JSON.stringify(dehydrate(queryClient))),
    },
    revalidate: 180, // In seconds
  };
};
